$primary: #32957E;
$info: #5b4cae;
$info: hsl(249, 39%, 49%);
$success: hsl(135, 41%, 48%);
$warning: #c59b29;
$danger: hsl(4, 90%, 58%);
$light: rgb(182, 185, 180);
$dark: #221c41;

$color-mode-type: media-query;

$table-success-dark: hsl(135, 41%, 10%);
$table-danger-dark: hsl(4, 90%, 10%);
$table-info-dark: hsl(249, 39%, 10%);
$button-success-dark: hsl(135, 41%, 18%);
$button-danger-dark: hsl(4, 90%, 18%);
$button-info-dark: hsl(249, 39%, 18%);
@import "../node_modules/bootstrap/scss/bootstrap";

body {
    @include color-mode(dark);
    color: $dark;
    background-color: $light;
    @include color-scheme(dark) {
        background-color: $dark;
        color: $light;
    }
    font-variant: tabular-nums;
}

nav.navbar {
    background-color: $primary;
    color: color-contrast($primary);
}

.card-header {
    display: flex;
    align-items: center;
    align-content: space-evenly;
    flex-direction: row;
    justify-content: space-between;

    .bi.bi-gear {
        width: 2em;
        height: 2em;
    }
}

.refresh {
    @extend .btn;
    @extend .btn-outline-secondary;
    @extend .ms-3;
}

.jobs {
    @extend .table;
    @extend .table-sm;

    .icon {
        width: 32px;
    }

    tbody {@extend .table-group-divider;}

    tr.Success {@extend .table-success;}
    tr.Failure {@extend .table-danger;}
    tr.Running {@extend .table-info;}

    button { @extend .btn;}
    button.Success {@extend .btn-success;}
    button.Failure {@extend .btn-danger;}
    button.Running {@extend .btn-info; color: color-contrast($info); }

    .Running .progress-bar {@extend .bg-info;}
    .progress-bar.indeterminate {
        @extend .progress-bar-striped;
        @extend .progress-bar-animated;
    }
    .eta, .status-deets {
        font-size: small;
    }

    .time {
        text-align: right;
        padding-right: 1.5em;
    }

    tr {
        vertical-align:middle;
    }

    .hist td {
        padding-top: 0;
        padding-bottom: 0;
        border: none;
        padding: 0;
    }

    .hist canvas {
        display: block;
        width: 100%;
        height: 8px;
        border-spacing: 0;
        image-rendering: pixelated;
    }
}

.log-view {
    table { @extend .table; @extend .table-sm; }
    pre {
        overflow: unset;
        word-break: break-all;
        white-space: pre-wrap;
        margin-bottom: 0;
    }

    .env table { @extend .table-bordered; }

    .env.hide table {
        display: none;
    }

    .env.hide h2::after {content: var(--disclosure-closed);}
    .env.show h2::after {content: var(--disclosure-opened);}
    .env h2::after {
        padding-left: .3rem;
        filter: var(--dark-invert);
    }

    h2 {
        font-size: initial;
        display: inline;
        padding-right: .3rem;
    }
}

.backdrop {
    position: fixed;
    background: rgba(0,0,0,70%);
    z-index: 2;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

.modal {
    position: absolute;
    left: 10%;
    right: 10%;
    top: 4em;
    z-index: 3;
    border-color: var(--bs-border-color);
    box-shadow: 0em 0em 5em black;
    /* Override bootstrap settings for .modal: */
    display: block;
    width: revert;
    height: revert;
}

.job, .global {
    &.settings .retention > .form-select {
        @extend .mb-3;
    }

    &.settings .retention input[type=text] {
        display: inline-block;
        width: 10em;
    }

    &.settings .retention .input-group {
        width: max-content;
    }

    &.settings .retention .form-select.input-group-text {
        flex: 0 0 auto;
        min-width: 7em;
        text-align: revert;
    }
    &.settings .retention input:not(:checked) + label .input-group :is(input, span, :disabled) {
        color: rgba(var(--bs-body-color-rgb), 50%);
    }
    &.settings .alert.hidden {
        display: block;
        opacity: 0; /* keep it rendered so it takes up space */
    }
    &.settings .alert.hidden::before {
        content: "Â "; /* nbsp to give it real content so it takes up the correct amount of vertical space */
    }
    &.settings .alert .spinner-border {
        @extend .spinner-border-sm;
    }
    &.settings .buttons button {
        width: 8em;
    }
}

.progress {
    .progress-bar-indeterminate {
        @extend .progress-bar-striped;
        @extend .progress-bar-animated;
        width: 100%;
    }
    .progress-bar {
        width: var(--progress);
    }
}

.prune.modal {
    .card-header > h1 {
        width: 100%; /* Why do I need this?? */
    }

    .card-header > h1:has(.progress) {
        font-size: 1.5em;
    }

    .deleted-runs.hide ~ table {
        display: none;
    }

    .deleted-runs.hide::before {content: var(--disclosure-closed);}
    .deleted-runs.show::before {content: var(--disclosure-opened);}
    .deleted-runs::before {
        padding-right: .3rem;
        filter: var(--dark-invert);
    }

    h2.deleted-runs {
        font-size: 1.2rem;
    }
    .deleted-runs + table {
        & {
            margin-bottom: 0.5rem; /* same as the h1, so buttons underneath have a consistent vertical gap */
            margin-left: calc(16px/*disclosure svg*/ + 0.3rem/*.deleted-runs::before padding-right*/);
        }
        thead {
            border-bottom: 1px solid;
        }
        tr:not(:first-child) td {
            padding-top: 0.2rem;
        }
        td:not(:last-child) {
            padding-right: 2em;
        }
        td {
            font-size: smaller;
        }
        tr td:first-child {
            font-family: monospace;
        }
    }
}

.spinner-border {
    margin-right: 1ex;
}

.error {
    @extend .alert;
    @extend .alert-danger;
}

.card-body .error:last-child {
    --bs-alert-margin-bottom: 0;
    margin-top: 1rem;
}

.hidden {
    display: none;
}

.container > .card {
    @extend .my-3;
    color: $dark;
}

.breadcrumb {
    --bs-breadcrumb-margin-bottom: 0;
}
.breadcrumb a, .breadcrumb-item.active, nav.navbar a {
    color: white;
}
nav {
    --bs-breadcrumb-divider: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8'><path d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='%23ffffff'/></svg>");
}

button {
    @extend .btn;
    @extend .btn-primary;
}

.load-buttons, .settings .buttons {
    @extend .d-grid;
    @extend .gap-2;
    @extend .d-md-flex;
    @extend .justify-content-md-start;
}

:root {
    --bs-code-color: $dark;
    --disclosure-closed:  url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-caret-right-fill' viewBox='0 0 16 16'><path d='m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z'/></svg>");
    --disclosure-opened: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-caret-down-fill' viewBox='0 0 16 16'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>");
    --dark-invert: invert(0);
}

$dot-color: $dark;
@import "dot-flashing.scss";

@import "ansi.scss";

@media (prefers-color-scheme: dark) {
    $dark: #221c41;
    $light: rgb(182, 185, 180);

    .log-view .env.hide h2::after, .log-view .env.hide .h2::after {
        color: var(--disclosure-color);
    }
    .container  .card {
        --bs-card-bg: #0f0c1e;
        color: $light;
    }
    :root {
        --disclosure-color: rgb(182, 185, 180);
        --dark-invert: invert(1);
    }

    @include table-variant(success-dark, $table-success-dark);
    @include table-variant(danger-dark,  $table-danger-dark);
    @include table-variant(info-dark,    $table-info-dark);

    .jobs tr.Failure { @extend .table-danger-dark; }
    .jobs tr.Success { @extend .table-success-dark; }
    .jobs tr.Running { @extend .table-info-dark; }

    .table, .log-view table, .jobs {
        --bs-table-color: rgb(182, 185, 180);
    }

    .btn-success-dark { @include button-variant($button-success-dark, $button-success-dark, $hover-background: lighten($button-success-dark, 10%), $hover-border: lighten($button-success-dark, 10%), ); }
    .btn-danger-dark  { @include button-variant($button-danger-dark,  $button-danger-dark,  $hover-background: lighten($button-danger-dark,  10%), $hover-border: lighten($button-danger-dark,  10%), ); }
    .btn-info-dark    { @include button-variant($button-info-dark,    $button-info-dark,    $hover-background: lighten($button-info-dark,    10%), $hover-border: lighten($button-info-dark,    10%), ); }
    .jobs button.Success {@extend .btn-success-dark;}
    .jobs button.Failure {@extend .btn-danger-dark;}
    .jobs button.Info    {@extend .btn-info-dark;}
}
